var cov_1nrjiujc8n=function(){var path='/Users/ralfcheung/routes/api/app.js',hash='eeaab930b5c4959449038fa51a5680d3e1b53ad5',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/ralfcheung/routes/api/app.js',statementMap:{'0':{start:{line:1,column:0},end:{line:1,column:27}},'1':{start:{line:2,column:16},end:{line:2,column:34}},'2':{start:{line:3,column:12},end:{line:3,column:21}},'3':{start:{line:4,column:11},end:{line:4,column:42}},'4':{start:{line:5,column:19},end:{line:5,column:41}},'5':{start:{line:6,column:18},end:{line:6,column:38}},'6':{start:{line:7,column:12},end:{line:7,column:36}},'7':{start:{line:8,column:18},end:{line:9,column:65}},'8':{start:{line:10,column:14},end:{line:10,column:30}},'9':{start:{line:12,column:0},end:{line:14,column:13}},'10':{start:{line:16,column:25},end:{line:16,column:78}},'11':{start:{line:18,column:0},end:{line:18,column:32}},'12':{start:{line:21,column:0},end:{line:24,column:3}},'13':{start:{line:22,column:2},end:{line:23,column:23}},'14':{start:{line:26,column:0},end:{line:29,column:3}},'15':{start:{line:27,column:2},end:{line:28,column:33}},'16':{start:{line:31,column:0},end:{line:34,column:3}},'17':{start:{line:32,column:2},end:{line:33,column:60}},'18':{start:{line:36,column:0},end:{line:36,column:27}},'19':{start:{line:37,column:0},end:{line:37,column:36}},'20':{start:{line:39,column:0},end:{line:39,column:30}},'21':{start:{line:41,column:0},end:{line:56,column:1}},'22':{start:{line:43,column:2},end:{line:46,column:5}},'23':{start:{line:44,column:4},end:{line:44,column:20}},'24':{start:{line:45,column:4},end:{line:45,column:55}},'25':{start:{line:48,column:2},end:{line:55,column:5}},'26':{start:{line:49,column:19},end:{line:49,column:36}},'27':{start:{line:50,column:4},end:{line:50,column:23}},'28':{start:{line:51,column:4},end:{line:54,column:7}},'29':{start:{line:58,column:0},end:{line:58,column:21}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:21,column:22},end:{line:21,column:23}},loc:{start:{line:21,column:37},end:{line:24,column:1}},line:21},'1':{name:'(anonymous_1)',decl:{start:{line:26,column:24},end:{line:26,column:25}},loc:{start:{line:26,column:43},end:{line:29,column:1}},line:26},'2':{name:'(anonymous_2)',decl:{start:{line:31,column:29},end:{line:31,column:30}},loc:{start:{line:31,column:48},end:{line:34,column:1}},line:31},'3':{name:'(anonymous_3)',decl:{start:{line:43,column:10},end:{line:43,column:11}},loc:{start:{line:43,column:28},end:{line:46,column:3}},line:43},'4':{name:'(anonymous_4)',decl:{start:{line:48,column:10},end:{line:48,column:11}},loc:{start:{line:48,column:39},end:{line:55,column:3}},line:48}},branchMap:{'0':{loc:{start:{line:41,column:0},end:{line:56,column:1}},type:'if',locations:[{start:{line:41,column:0},end:{line:56,column:1}},{start:{line:41,column:0},end:{line:56,column:1}}],line:41},'1':{loc:{start:{line:49,column:19},end:{line:49,column:36}},type:'binary-expr',locations:[{start:{line:49,column:19},end:{line:49,column:29}},{start:{line:49,column:33},end:{line:49,column:36}}],line:49}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1nrjiujc8n.s[0]++;require('dotenv').config();const express=(cov_1nrjiujc8n.s[1]++,require("express"));const app=(cov_1nrjiujc8n.s[2]++,express());const db=(cov_1nrjiujc8n.s[3]++,require('../config/connection'));const bodyParser=(cov_1nrjiujc8n.s[4]++,require('body-parser'));const Memcached=(cov_1nrjiujc8n.s[5]++,require('memcached'));const env=(cov_1nrjiujc8n.s[6]++,require('../config/env'));const memcached=(cov_1nrjiujc8n.s[7]++,new Memcached(env[process.env.NODE_ENV].memcacheURL,{idle:1,timeout:300,reconnect:2,failures:2,retries:2}));const Raven=(cov_1nrjiujc8n.s[8]++,require('raven'));cov_1nrjiujc8n.s[9]++;Raven.config(env[process.env.NODE_ENV].sentryKey,{sendTimeout:5,autoBreadcrumbs:true}).install();const directionsRoutes=(cov_1nrjiujc8n.s[10]++,require('../server/directions/routes')(memcached,db));cov_1nrjiujc8n.s[11]++;app.use(Raven.requestHandler());// Record memcached server issues and report it to Sentry
cov_1nrjiujc8n.s[12]++;memcached.on('issue',function(err){cov_1nrjiujc8n.f[0]++;cov_1nrjiujc8n.s[13]++;Raven.captureMessage('Memcache server '+err.server+' issue: '+err.messages[0]);});cov_1nrjiujc8n.s[14]++;memcached.on('failure',function(details){cov_1nrjiujc8n.f[1]++;cov_1nrjiujc8n.s[15]++;Raven.captureMessage('Server '+details.server+'went down due to: '+details.messages.join(''));});cov_1nrjiujc8n.s[16]++;memcached.on('reconnecting',function(details){cov_1nrjiujc8n.f[2]++;cov_1nrjiujc8n.s[17]++;Raven.captureMessage('Total downtime caused by memcached server '+details.server+' :'+details.totalDownTime+'ms');});cov_1nrjiujc8n.s[18]++;app.use(bodyParser.json());cov_1nrjiujc8n.s[19]++;app.use('/route',directionsRoutes);// Route API routes
cov_1nrjiujc8n.s[20]++;app.use(Raven.errorHandler());cov_1nrjiujc8n.s[21]++;if(process.env.NODE_ENV==='production'){cov_1nrjiujc8n.b[0][0]++;cov_1nrjiujc8n.s[22]++;// API error handler
app.use(function(req,res){cov_1nrjiujc8n.f[3]++;cov_1nrjiujc8n.s[23]++;res.status(404);cov_1nrjiujc8n.s[24]++;res.send({message:req.originalUrl+' not found'});});cov_1nrjiujc8n.s[25]++;app.use(function(err,req,res,next){cov_1nrjiujc8n.f[4]++;const status=(cov_1nrjiujc8n.s[26]++,(cov_1nrjiujc8n.b[1][0]++,err.status)||(cov_1nrjiujc8n.b[1][1]++,500));cov_1nrjiujc8n.s[27]++;res.status(status);cov_1nrjiujc8n.s[28]++;res.json({status:status,message:err.message});});}else{cov_1nrjiujc8n.b[0][1]++;}cov_1nrjiujc8n.s[29]++;module.exports=app;
var cov_1tglkjiy9e=function(){var path='/Users/ralfcheung/routes/config/connection.js',hash='c8528342cb9b9a41e3841f9dc31b2a137d3ee0cd',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/ralfcheung/routes/config/connection.js',statementMap:{'0':{start:{line:1,column:12},end:{line:1,column:28}},'1':{start:{line:2,column:17},end:{line:2,column:36}},'2':{start:{line:3,column:17},end:{line:3,column:46}},'3':{start:{line:4,column:15},end:{line:4,column:34}},'4':{start:{line:6,column:16},end:{line:13,column:1}},'5':{start:{line:15,column:0},end:{line:15,column:42}},'6':{start:{line:17,column:0},end:{line:17,column:50}},'7':{start:{line:19,column:0},end:{line:23,column:3}},'8':{start:{line:20,column:2},end:{line:20,column:44}},'9':{start:{line:21,column:2},end:{line:21,column:24}},'10':{start:{line:22,column:2},end:{line:22,column:47}},'11':{start:{line:25,column:0},end:{line:26,column:52}},'12':{start:{line:28,column:0},end:{line:31,column:3}},'13':{start:{line:29,column:2},end:{line:29,column:44}},'14':{start:{line:30,column:2},end:{line:30,column:47}},'15':{start:{line:33,column:0},end:{line:34,column:54}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:19,column:23},end:{line:19,column:24}},loc:{start:{line:19,column:35},end:{line:23,column:1}},line:19},'1':{name:'(anonymous_1)',decl:{start:{line:28,column:30},end:{line:28,column:31}},loc:{start:{line:28,column:42},end:{line:31,column:1}},line:28}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},f:{'0':0,'1':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const env=(cov_1tglkjiy9e.s[0]++,require('./env'));const mongoose=(cov_1tglkjiy9e.s[1]++,require('mongoose'));const configDB=(cov_1tglkjiy9e.s[2]++,require('./database.js')(env));const logger=(cov_1tglkjiy9e.s[3]++,require('./logger'));const options=(cov_1tglkjiy9e.s[4]++,{native_parser:true,poolSize:5,user:env.dbUser,pass:env.dbPassword,auto_reconnect:true// mongos: true     <- enable it for scaling
});cov_1tglkjiy9e.s[5]++;mongoose.connect(configDB.dbURL,options);cov_1tglkjiy9e.s[6]++;module.exports=connection=mongoose.connection;cov_1tglkjiy9e.s[7]++;connection.on('error',function(){cov_1tglkjiy9e.f[0]++;cov_1tglkjiy9e.s[8]++;logger.error('MongoDB connection error:');cov_1tglkjiy9e.s[9]++;mongoose.disconnect();// mongoose doesn't disconnect on error
cov_1tglkjiy9e.s[10]++;throw new Error('Disconnected from MongoDB');});cov_1tglkjiy9e.s[11]++;connection.on('connected',logger.info.bind(logger,'Connected to MongoDB'));cov_1tglkjiy9e.s[12]++;connection.on('disconnected',function(){cov_1tglkjiy9e.f[1]++;cov_1tglkjiy9e.s[13]++;logger.error('Disconnected from MongoDB');cov_1tglkjiy9e.s[14]++;throw new Error('Disconnected from MongoDB');});cov_1tglkjiy9e.s[15]++;connection.on('reconnected',logger.info.bind(logger,'Reconnected to MongoDB'));
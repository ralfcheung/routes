var cov_nynrvf518=function(){var path="/Users/ralfcheung/routes/error/AppError.js",hash="af78803562d1d499b91f1cbc1e96ced8ad81c203",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/ralfcheung/routes/error/AppError.js",statementMap:{"0":{start:{line:1,column:0},end:{line:17,column:2}},"1":{start:{line:4,column:4},end:{line:4,column:19}},"2":{start:{line:7,column:4},end:{line:7,column:38}},"3":{start:{line:10,column:4},end:{line:10,column:52}},"4":{start:{line:15,column:4},end:{line:15,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:2},end:{line:2,column:3}},loc:{start:{line:2,column:31},end:{line:16,column:3}},line:2}},branchMap:{"0":{loc:{start:{line:15,column:18},end:{line:15,column:31}},type:"binary-expr",locations:[{start:{line:15,column:18},end:{line:15,column:24}},{start:{line:15,column:28},end:{line:15,column:31}}],line:15}},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_nynrvf518.s[0]++;module.exports=class AppError extends Error{constructor(message,status){cov_nynrvf518.f[0]++;cov_nynrvf518.s[1]++;// Calling parent constructor of base Error class.
super(message);// Saving class name in the property of our custom error as a shortcut.
cov_nynrvf518.s[2]++;this.name=this.constructor.name;// Capturing stack trace, excluding constructor call from it.
cov_nynrvf518.s[3]++;Error.captureStackTrace(this,this.constructor);// You can use any additional properties you want.
// I'm going to use preferred HTTP status for this error types.
// `500` is the default value if not specified.
cov_nynrvf518.s[4]++;this.status=(cov_nynrvf518.b[0][0]++,status)||(cov_nynrvf518.b[0][1]++,500);}};